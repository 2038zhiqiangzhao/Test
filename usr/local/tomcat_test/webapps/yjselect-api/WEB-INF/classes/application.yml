# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    max-connections: 20000
    min-spare-threads: 30
  port: 8083
  servlet:
    context-path: /yjselect-api
  
# mysql
spring: 
  messages:
  #表示放在classpath的i18n文件夹，文件前缀为mess  
    basename: i18n.mess
    cache-duration: 3600
    encoding: UTF-8
  # 环境 dev|test|prod
  profiles:
    active: dev
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
  redis:
    database: 5   #数据库
    host: 192.168.98.20  #服务地址
    port: 6379    #服务端口
    password: People2000    #服务密码  为空不填            
    timeout: 6000ms  # 连接超时时长（毫秒）
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接
  freemarker:
    suffix: .html
    request-context-attribute: request
    #出现错误时, 直接抛出异常
  mvc:
    throw-exception-if-no-handler-found: true
    #同个WEB服务器下两个以上springboot项目报错解决
  jmx:
    enabled: false
    
#不要为我们工程中的资源文件建立映射
  resources:
    add-mappings: true
yjselect:
  redis:
    open: true  # 是否开启redis缓存  true开启   false关闭
  shiro:
    redis: false # true表示shiro session存到redis里，需要开启redis，才会生效【分布式场景】
 
#mybatis
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.people.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL判断",2:"非空判断"
    field-strategy: 1
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置
    logic-delete-value: -1
    logic-not-delete-value: 0
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true

logging:
  # level: debug
  level.com.people: info
  # path: logs/
  # file: api.log
 


    
    
#自定义数据源 
selfmysql: 
   driverClassName: com.mysql.jdbc.Driver 
   url: jdbc:mysql://192.168.98.20:3306/yjselect?useUnicode=true&characterEncoding=utf-8&useSSL=false
   username: BZKtY+Bzy9SX7coiHRx6Ag== 
   password: tCnnBt5DDSA7VV9u6E2DkQ==



#自定义参数
param:
  queryEachFee: 1  #查询记录每条费用
  custNumberLen: 10  #客户编号长度
  custMaxAmount: 100000 #客户充值限制金额
  resourcePath: /resource   #资源存储位置
  secretKey: 88EC79663AB7BF64E2D75FF83AFE9988  #解密密钥
  serverPubKey: ServerPublicKey   #服务端公钥名称前缀  
  serverPriKey: ServerPrivateKey   #服务端私钥名称前缀 
  queryDataLen: 200    #查询文件最大数量
  zipFileName: 待回传查询信息 #zip压缩文件名称
  fileDelayDel: 30000  #延时删除文件时间
  compressFiles: .zip  #压缩文件类型
  keyDefaulExpire: 600 # redis KEY默认过期时长，单位：秒
  sm2SerPubKey: sm2SerPubKey  #服务端加密卡公钥名称
  sm2EncryptSize: 8192      #软实现SM2加密內容大小
  keyIsStoreDinptionCard: 1   #密钥存储在加密卡中的位置0-1024
  isHardwareSupport: true    #是否使用加密卡加密，true：加密卡加密， false：非加密卡加密
  
  
  
  

   
  
 
  
  
  
  
  

 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  